extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5
var c_mousex = 0.0
var c_mousey = 0.0

func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed("ui_accept") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector("left", "right", "up", "down")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
	var camera = $Camera
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED
	var windowsizex = DisplayServer.window_get_size().x
	var windowsizey = DisplayServer.window_get_size().y
	
	self.rotation_degrees.y -= ((get_viewport().get_mouse_position().x/4.0)-c_mousex)
	camera.rotation_degrees.x -= ((get_viewport().get_mouse_position().y/4.0)-c_mousex)
	c_mousex = get_viewport().get_mouse_position().x/4.0
	c_mousey = get_viewport().get_mouse_position().y/4.0
	
